{"version":3,"sources":["features/todo/todoSlice.js","components/Todo.jsx","components/Ready.jsx","App.js","reportWebVitals.js","store/store.js","index.js"],"names":["todoSlice","createSlice","name","initialState","id","text","reducers","addTodo","state","action","todo","uuid","payload","push","deleteTodo","filter","updateTodo","find","actions","console","log","Todo","dispatch","useDispatch","useState","isEdit","setIsEdit","editValue","setEditValue","cancelEdit","ListItemButton","sx","display","justifyContent","TextField","label","size","defaultValue","onChange","e","target","value","Button","onClick","variant","color","Ready","setText","todos","useSelector","className","style","maxWidth","margin","Tabs","centered","Tab","fontSize","FormControl","InputLabel","htmlFor","FilledInput","width","preventDefault","height","disabled","List","component","length","opacity","map","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","configureStore","reducer","todoReducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.51e0263b.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { v4 as uuid } from \"uuid\";\r\n\r\nexport const todoSlice = createSlice({\r\n  name: \"todos\",\r\n  initialState: [\r\n    {\r\n      id: \"8bc6b742-9855-46b2-8a1f-376f8e7c3718\",\r\n      text: \"having lunch\",\r\n    },\r\n    {\r\n      id: \"367acb06-9e2f-4c57-8001-653cc9b0a250\",\r\n      text: \"playing footbal\",\r\n    },\r\n  ],\r\n  reducers: {\r\n    addTodo: (state, action) => {\r\n      const todo = {\r\n        id: uuid(),\r\n        text: action.payload,\r\n      };\r\n      // mutate the state\r\n      state.push(todo);\r\n    },\r\n    deleteTodo: (state, action) => {\r\n      return state.filter((todo) => todo.id !== action.payload);\r\n    },\r\n    updateTodo: (state, action) => {\r\n      const { id, text } = action.payload;\r\n\r\n      const todo = state.find((todo) => todo.id === id);\r\n      todo.text = text;\r\n    },\r\n  },\r\n});\r\n\r\n// Dispatch\r\nexport const { addTodo, deleteTodo, updateTodo } = todoSlice.actions;\r\nconsole.log(\"todoSlice: \", todoSlice);\r\n\r\n// For configureStore\r\nexport default todoSlice.reducer;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport ListItemButton from \"@mui/material/ListItemButton\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport { Button, Tabs, Tab } from \"@mui/material\";\r\n\r\nimport { deleteTodo, updateTodo } from \"../features/todo/todoSlice\";\r\n\r\nfunction Todo({ text, id }) {\r\n  const dispatch = useDispatch();\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [editValue, setEditValue] = useState(text);\r\n  const saveTodo = () => {\r\n    const payload = {\r\n      id,\r\n      text: editValue,\r\n    };\r\n    dispatch(updateTodo(payload));\r\n    cancelEdit();\r\n  };\r\n\r\n  const cancelEdit = () => {\r\n    setIsEdit(false);\r\n  };\r\n\r\n  return isEdit ? (\r\n    <ListItemButton sx={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n      <TextField\r\n        label=\"Edit\"\r\n        id=\"outlined-size-small\"\r\n        size=\"small\"\r\n        defaultValue={text}\r\n        onChange={(e) => setEditValue(e.target.value)}\r\n      />\r\n      <div>\r\n        <Button\r\n          onClick={() => cancelEdit()}\r\n          size=\"small\"\r\n          variant=\"outlined\"\r\n          color=\"error\"\r\n        >\r\n          cancel\r\n        </Button>\r\n        <Button\r\n          onClick={() => saveTodo()}\r\n          size=\"small\"\r\n          variant=\"contained\"\r\n          color=\"success\"\r\n        >\r\n          save\r\n        </Button>\r\n      </div>\r\n    </ListItemButton>\r\n  ) : (\r\n    <ListItemButton sx={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n      <div>{text}</div>\r\n\r\n      <div>\r\n        <Button\r\n          onClick={() => dispatch(deleteTodo(id))}\r\n          size=\"small\"\r\n          variant=\"text\"\r\n          color=\"error\"\r\n        >\r\n          delete\r\n        </Button>\r\n        <Button\r\n          onClick={() => setIsEdit(!isEdit)}\r\n          size=\"small\"\r\n          variant=\"text\"\r\n          color=\"info\"\r\n        >\r\n          edit\r\n        </Button>\r\n      </div>\r\n    </ListItemButton>\r\n  );\r\n}\r\n\r\nexport default Todo;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { Button, Tabs, Tab } from \"@mui/material\";\r\nimport List from \"@mui/material/List\";\r\nimport FilledInput from \"@mui/material/FilledInput\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport ListItemButton from \"@mui/material/ListItemButton\";\r\n\r\nimport { addTodo, deleteTodo } from \"../features/todo/todoSlice\";\r\nimport Todo from \"./Todo\";\r\n\r\nexport default function Ready() {\r\n  const [text, setText] = useState(\"\");\r\n  const todos = useSelector((state) => state.todos);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const addTodoHandler = (event) => {\r\n    event.preventDefault();\r\n    //\r\n    dispatch(addTodo(text));\r\n    setText(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"my-list\" style={{ maxWidth: \"660px\", margin: \"auto\" }}>\r\n      <Tabs value={0} centered>\r\n        <Tab\r\n          label=\"My Todo List\"\r\n          sx={{ color: \"royalblue\", fontSize: \"20px\" }}\r\n        />\r\n      </Tabs>\r\n\r\n      <form style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n        <FormControl variant=\"filled\">\r\n          <InputLabel htmlFor=\"component-filled\">Todo</InputLabel>\r\n          <FilledInput\r\n            id=\"component-filled\"\r\n            value={text}\r\n            onChange={(e) => setText(e.target.value)}\r\n            sx={{ width: \"300px\" }}\r\n          />\r\n        </FormControl>\r\n\r\n        <Button\r\n          variant=\"contained\"\r\n          onClick={(e) => {\r\n            addTodoHandler(e);\r\n          }}\r\n          sx={{ height: \"55px\" }}\r\n          disabled={text === \"\"}\r\n        >\r\n          Add\r\n        </Button>\r\n      </form>\r\n      <List component=\"nav\">\r\n        {todos.length === 0 ? (\r\n          <ListItemButton sx={{ opacity: \"0.7\" }}>\r\n            Add your first todo\r\n          </ListItemButton>\r\n        ) : (\r\n          todos.map((todo) => (\r\n            <Todo key={todo.id} text={todo.text} id={todo.id} />\r\n          ))\r\n        )}\r\n      </List>\r\n    </div>\r\n  );\r\n}\r\n\r\n// enough with the ui, now redux\r\n","import Ready from \"./components/Ready\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Ready />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport todoReducer from \"../features/todo/todoSlice\";\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    todos: todoReducer,\r\n  },\r\n});\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}